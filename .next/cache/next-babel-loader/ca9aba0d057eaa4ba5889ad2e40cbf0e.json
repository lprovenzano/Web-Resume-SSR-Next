{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar Experience = function Experience(_ref) {\n  var job = _ref.job;\n  var duties = [];\n  var technologiesUsed = [];\n\n  var _iterator = _createForOfIteratorHelper(job.duties.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          value = _step$value[1];\n\n      duties.push(__jsx(\"li\", {\n        key: index\n      }, value));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(job.technologiesUsed.entries()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          _index = _step2$value[0],\n          _value = _step2$value[1];\n\n      technologiesUsed.push(__jsx(\"li\", {\n        key: _index,\n        className: \"list-inline-item\"\n      }, __jsx(\"span\", {\n        className: \"badge badge-primary badge-pill\"\n      }, _value)));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return __jsx(\"div\", {\n    className: \"resume-timeline position-relative\"\n  }, __jsx(\"article\", {\n    className: \"resume-timeline-item position-relative pb-5\"\n  }, __jsx(\"div\", {\n    className: \"resume-timeline-item-header mb-2\"\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-column flex-md-row\"\n  }, __jsx(\"h3\", {\n    className: \"resume-position-title font-weight-bold mb-1\"\n  }, job.role)), __jsx(\"p\", null, __jsx(\"a\", {\n    href: job.company.url,\n    target: \"_blank\"\n  }, job.company.name)), __jsx(\"div\", {\n    className: \"resume-position-time\"\n  }, job.date.from, \" - \", job.date.to)), __jsx(\"div\", {\n    className: \"resume-timeline-item-desc\"\n  }, __jsx(\"ul\", null, duties), __jsx(\"ul\", {\n    className: \"list-inline\"\n  }, technologiesUsed))));\n};\n\nexport default Experience;","map":null,"metadata":{},"sourceType":"module"}