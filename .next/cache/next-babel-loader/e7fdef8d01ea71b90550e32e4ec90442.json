{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Luca\\\\Next-Resume-Luca\\\\component\\\\experience.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar Experience = function Experience(_ref) {\n  var job = _ref.job;\n  var duties = [];\n  var technologiesUsed = [];\n\n  var _iterator = _createForOfIteratorHelper(job.duties.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          index = _step$value[0],\n          value = _step$value[1];\n\n      duties.push(__jsx(\"li\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 17\n        }\n      }, value));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(job.technologiesUsed.entries()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          _index = _step2$value[0],\n          _value = _step2$value[1];\n\n      technologiesUsed.push(__jsx(\"li\", {\n        \"class\": \"list-inline-item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 27\n        }\n      }, __jsx(\"span\", {\n        \"class\": \"badge badge-primary badge-pill\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 56\n        }\n      }, \"Angular\")));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return __jsx(\"div\", {\n    className: \"resume-timeline position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    className: \"resume-timeline-item position-relative pb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"resume-timeline-item-header mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex flex-column flex-md-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"resume-position-title font-weight-bold mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, job.role)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: job.company.url,\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, job.company.name)), __jsx(\"div\", {\n    className: \"resume-position-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, job.date.from, \" - \", job.date.to)), __jsx(\"div\", {\n    className: \"resume-timeline-item-desc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, duties), __jsx(\"ul\", {\n    className: \"list-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"badge badge-primary badge-pill\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, technologiesUsed))))));\n};\n\n_c = Experience;\nexport default Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["C:/Luca/Next-Resume-Luca/component/experience.js"],"names":["Experience","job","duties","technologiesUsed","entries","index","value","push","role","company","url","name","date","from","to"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC9B,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,gBAAgB,GAAG,EAAzB;;AAF8B,6CAIDF,GAAG,CAACC,MAAJ,CAAWE,OAAX,EAJC;AAAA;;AAAA;AAI9B,wDAAmD;AAAA;AAAA,UAAvCC,KAAuC;AAAA,UAAhCC,KAAgC;;AACjDJ,MAAAA,MAAM,CAACK,IAAP,CAAY;AAAI,QAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBC,KAAjB,CAAZ;AACD;AAN6B;AAAA;AAAA;AAAA;AAAA;;AAAA,8CAQDL,GAAG,CAACE,gBAAJ,CAAqBC,OAArB,EARC;AAAA;;AAAA;AAQ9B,2DAA6D;AAAA;AAAA,UAAjDC,MAAiD;AAAA,UAA1CC,MAA0C;;AAC3DH,MAAAA,gBAAgB,CAACI,IAAjB,CAAsB;AAAI,iBAAM,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAM,iBAAM,gCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA7B,CAAtB;AACD;AAV6B;AAAA;AAAA;AAAA;AAAA;;AAY9B,SACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,6CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,6CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,GAAG,CAACO,IADP,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEP,GAAG,CAACQ,OAAJ,CAAYC,GAArB;AAA0B,IAAA,MAAM,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,GAAG,CAACQ,OAAJ,CAAYE,IADf,CADF,CANF,EAWE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,GAAG,CAACW,IAAJ,CAASC,IADZ,SACqBZ,GAAG,CAACW,IAAJ,CAASE,EAD9B,CAXF,CADF,EAgBE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,MAAL,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBADH,CADF,CADF,CAFF,CAhBF,CADF,CADF;AA+BD,CA3CD;;KAAMH,U;AA6CN,eAAeA,UAAf","sourcesContent":["const Experience = ({ job }) => {\r\n  const duties = [];\r\n  const technologiesUsed = [];\r\n\r\n  for (const [index, value] of job.duties.entries()) {\r\n    duties.push(<li key={index}>{value}</li>);\r\n  }\r\n\r\n  for (const [index, value] of job.technologiesUsed.entries()) {\r\n    technologiesUsed.push(<li class=\"list-inline-item\"><span class=\"badge badge-primary badge-pill\">Angular</span></li>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-timeline position-relative\">\r\n      <article className=\"resume-timeline-item position-relative pb-5\">\r\n        <div className=\"resume-timeline-item-header mb-2\">\r\n          <div className=\"d-flex flex-column flex-md-row\">\r\n            <h3 className=\"resume-position-title font-weight-bold mb-1\">\r\n              {job.role}\r\n            </h3>\r\n          </div>\r\n          <p>\r\n            <a href={job.company.url} target=\"_blank\">\r\n              {job.company.name}\r\n            </a>\r\n          </p>\r\n          <div className=\"resume-position-time\">\r\n            {job.date.from} - {job.date.to}\r\n          </div>\r\n        </div>\r\n        <div className=\"resume-timeline-item-desc\">\r\n          <ul>{duties}</ul>\r\n          <ul className=\"list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <span className=\"badge badge-primary badge-pill\">\r\n                {technologiesUsed}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n"]},"metadata":{},"sourceType":"module"}